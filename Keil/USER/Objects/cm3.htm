<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\cm3.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\cm3.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060750: Last Updated: Mon Jul 03 20:29:35 2023
<BR><P>
<H3>Maximum Stack Usage =        124 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; s_grey_movePlane &rArr; s_grey_createOneEnmeyBullet &rArr; __aeabi_fsub &rArr; __aeabi_fadd &rArr; _float_epilogue
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[7b]">uart_SendChar</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7b]">uart_SendChar</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[4]">BusFault_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[13]">CREATE_PLANE_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[7]">DebugMon_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[d]">KEY0_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[e]">KEY1_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[f]">KEY2_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[10]">KEY3_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[3]">MemManage_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[17]">NOISE_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[14]">PULSE0_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[15]">PULSE1_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[8]">PendSV_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[6]">SVC_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[9]">SysTick_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[19]">SystemInit</a> from system.o(i.SystemInit) referenced from startup_cm3ds.o(.text)
 <LI><a href="#[11]">TIMER_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[16]">TRIANGLE_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[c]">UARTOVR_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[a]">UARTRX_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[b]">UARTTX_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[5]">UsageFault_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[12]">VGA_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[1a]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_cm3ds.o(.text)
 <LI><a href="#[1b]">fputc</a> from retarget.o(i.fputc) referenced from printf5.o(i.__0printf$5)
 <LI><a href="#[18]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[1a]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(.text)
</UL>
<P><STRONG><a name="[b4]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[1c]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[40]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[b5]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[b6]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[b7]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[b8]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[b9]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMIHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFaultHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>MemManage_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManageHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>BusFault_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFaultHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>UsageFault_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFaultHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>SVC_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVCHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>DebugMon_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMonHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSVHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>SysTick_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SysTick_Handler &rArr; SysTickHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTickHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>UARTRX_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTRXHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>UARTTX_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTTXHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>UARTOVR_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTOVRHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>KEY0_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = KEY0_Handler &rArr; KEY0 &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY0
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>KEY1_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>KEY2_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY2
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>KEY3_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY3
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>TIMER_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>VGA_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vga_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>CREATE_PLANE_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = CREATE_PLANE_Handler &rArr; create_plane_Handler &rArr; s_green_createPlane_243 &rArr; s_green_createPlane_222 &rArr; s_green_createOnePlane
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_plane_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>PULSE0_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = PULSE0_Handler &rArr; pulse0_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pulse0_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>PULSE1_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pulse1_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>TRIANGLE_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;triangle_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>NOISE_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;noise_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[5e]"></a>rand</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, rand.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;s_grey_createPlane_145
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;s_grey_createPlane_144
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;s_grey_createPlane_123
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;s_grey_createPlane_122
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;s_grey_createPlane_111
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;s_green_createPlane_422
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;s_green_createPlane_411
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;s_green_createPlane_243
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;s_green_createPlane_222
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;s_green_createPlane_221
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;s_grey_movePlane
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;s_green_movePlane
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;b_green_movePlane
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;s_grey_createOnePlane
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;s_green_createOnePlane
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_straight_createOnePlane
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;b_green_createOnePlane
</UL>

<P><STRONG><a name="[ba]"></a>srand</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, rand.o(.text), UNUSED)

<P><STRONG><a name="[35]"></a>__aeabi_fadd</STRONG> (Thumb, 164 bytes, Stack size 16 bytes, fadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
</UL>

<P><STRONG><a name="[38]"></a>__aeabi_fsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_fsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;s_grey_createOneEnmeyBullet
</UL>

<P><STRONG><a name="[39]"></a>__aeabi_frsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[76]"></a>__aeabi_fmul</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, fmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_fmul
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;endInterFaceDraw
</UL>

<P><STRONG><a name="[3a]"></a>__aeabi_fdiv</STRONG> (Thumb, 124 bytes, Stack size 8 bytes, fdiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;s_grey_createOneEnmeyBullet
</UL>

<P><STRONG><a name="[3b]"></a>__aeabi_i2f</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, fflti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_i2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;s_grey_createOneEnmeyBullet
</UL>

<P><STRONG><a name="[3c]"></a>__aeabi_ui2f</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ffltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_ui2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[77]"></a>__aeabi_f2uiz</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, ffixui.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;endInterFaceDraw
</UL>

<P><STRONG><a name="[3d]"></a>__aeabi_uldivmod</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, uldiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[bb]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[37]"></a>_float_round</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, fepilogue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[36]"></a>_float_epilogue</STRONG> (Thumb, 92 bytes, Stack size 4 bytes, fepilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[1d]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[bc]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[3f]"></a>__aeabi_llsl</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[bd]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[3e]"></a>__aeabi_llsr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[be]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[bf]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dclz77c.o(.text), UNUSED)

<P><STRONG><a name="[c0]"></a>__decompress2</STRONG> (Thumb, 94 bytes, Stack size unknown bytes, __dclz77c.o(.text), UNUSED)

<P><STRONG><a name="[21]"></a>BusFaultHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, handler.o(i.BusFaultHandler))
<BR><BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>

<P><STRONG><a name="[24]"></a>DebugMonHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, handler.o(i.DebugMonHandler))
<BR><BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>

<P><STRONG><a name="[1f]"></a>HardFaultHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, handler.o(i.HardFaultHandler))
<BR><BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>

<P><STRONG><a name="[51]"></a>Is_SPI_Ready</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, spi_flash.o(i.Is_SPI_Ready))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_ReadWriteByte
</UL>

<P><STRONG><a name="[2a]"></a>KEY0</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, handler.o(i.KEY0))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = KEY0 &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_on
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_down
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY0_Handler
</UL>

<P><STRONG><a name="[2b]"></a>KEY1</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, handler.o(i.KEY1))
<BR><BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY1_Handler
</UL>

<P><STRONG><a name="[2c]"></a>KEY2</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, handler.o(i.KEY2))
<BR><BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY2_Handler
</UL>

<P><STRONG><a name="[2d]"></a>KEY3</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, handler.o(i.KEY3))
<BR><BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY3_Handler
</UL>

<P><STRONG><a name="[43]"></a>LED_down</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, led.o(i.LED_down))
<BR><BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY0
</UL>

<P><STRONG><a name="[42]"></a>LED_on</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, led.o(i.LED_on))
<BR><BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY0
</UL>

<P><STRONG><a name="[ad]"></a>LED_toggle</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, led.o(i.LED_toggle))
<BR><BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;s_green_movePlane
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;myPlane_Act
</UL>

<P><STRONG><a name="[20]"></a>MemManageHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, handler.o(i.MemManageHandler))
<BR><BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>

<P><STRONG><a name="[1e]"></a>NMIHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, handler.o(i.NMIHandler))
<BR><BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>

<P><STRONG><a name="[48]"></a>PS2_ClearData</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, pstwo.o(i.PS2_ClearData))
<BR><BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PS2_DataKey
</UL>

<P><STRONG><a name="[44]"></a>PS2_Cmd</STRONG> (Thumb, 104 bytes, Stack size 32 bytes, pstwo.o(i.PS2_Cmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = PS2_Cmd &rArr; delay_us &rArr; delay
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readPs2DI
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PS2_ReadData
</UL>

<P><STRONG><a name="[47]"></a>PS2_DataKey</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, pstwo.o(i.PS2_DataKey))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = PS2_DataKey &rArr; PS2_ReadData &rArr; PS2_Cmd &rArr; delay_us &rArr; delay
</UL>
<BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PS2_ReadData
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PS2_ClearData
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8d]"></a>PS2_Init</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, pstwo.o(i.PS2_Init))
<BR><BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[49]"></a>PS2_ReadData</STRONG> (Thumb, 134 bytes, Stack size 32 bytes, pstwo.o(i.PS2_ReadData))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = PS2_ReadData &rArr; PS2_Cmd &rArr; delay_us &rArr; delay
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readPs2DI
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PS2_Cmd
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PS2_DataKey
</UL>

<P><STRONG><a name="[25]"></a>PendSVHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, handler.o(i.PendSVHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>

<P><STRONG><a name="[4a]"></a>SPI_FLASH_Write_Enable</STRONG> (Thumb, 22 bytes, Stack size 4 bytes, spi_flash.o(i.SPI_FLASH_Write_Enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SPI_FLASH_Write_Enable &rArr; SPI_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_ReadWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Write_Page
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Erase_Block
</UL>

<P><STRONG><a name="[4c]"></a>SPI_Flash_Erase_Block</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, spi_flash.o(i.SPI_Flash_Erase_Block))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SPI_Flash_Erase_Block &rArr; SPI_Flash_Wait_Busy &rArr; SPI_Flash_ReadSR &rArr; SPI_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_ReadWriteByte
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Wait_Busy
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_Write_Enable
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4e]"></a>SPI_Flash_Read</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, spi_flash.o(i.SPI_Flash_Read))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SPI_Flash_Read &rArr; SPI_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_ReadWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4f]"></a>SPI_Flash_ReadSR</STRONG> (Thumb, 28 bytes, Stack size 4 bytes, spi_flash.o(i.SPI_Flash_ReadSR))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SPI_Flash_ReadSR &rArr; SPI_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_ReadWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Wait_Busy
</UL>

<P><STRONG><a name="[4d]"></a>SPI_Flash_Wait_Busy</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, spi_flash.o(i.SPI_Flash_Wait_Busy))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SPI_Flash_Wait_Busy &rArr; SPI_Flash_ReadSR &rArr; SPI_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_ReadSR
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Write_Page
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Erase_Block
</UL>

<P><STRONG><a name="[50]"></a>SPI_Flash_Write_Page</STRONG> (Thumb, 78 bytes, Stack size 20 bytes, spi_flash.o(i.SPI_Flash_Write_Page))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SPI_Flash_Write_Page &rArr; SPI_Flash_Wait_Busy &rArr; SPI_Flash_ReadSR &rArr; SPI_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_ReadWriteByte
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Wait_Busy
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_Write_Enable
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;makeMapSecond
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;makeMapFirst
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8e]"></a>SPI_Init</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, spi_flash.o(i.SPI_Init))
<BR><BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4b]"></a>SPI_ReadWriteByte</STRONG> (Thumb, 68 bytes, Stack size 4 bytes, spi_flash.o(i.SPI_ReadWriteByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = SPI_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_SendData
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Is_SPI_Ready
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Write_Page
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Read
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Erase_Block
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_ReadSR
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_Write_Enable
</UL>

<P><STRONG><a name="[52]"></a>SPI_SendData</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, spi_flash.o(i.SPI_SendData))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_ReadWriteByte
</UL>

<P><STRONG><a name="[23]"></a>SVCHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, handler.o(i.SVCHandler))
<BR><BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>

<P><STRONG><a name="[53]"></a>Set_SysTick_CTRL</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, systick.o(i.Set_SysTick_CTRL))
<BR><BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTickHandler
</UL>

<P><STRONG><a name="[72]"></a>Set_SysTick_LOAD</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, systick.o(i.Set_SysTick_LOAD))
<BR><BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
</UL>

<P><STRONG><a name="[73]"></a>Set_SysTick_VALUE</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, systick.o(i.Set_SysTick_VALUE))
<BR><BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
</UL>

<P><STRONG><a name="[26]"></a>SysTickHandler</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, handler.o(i.SysTickHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SysTickHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_SysTick_CTRL
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[19]"></a>SystemInit</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, system.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SystemInit
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(.text)
</UL>
<P><STRONG><a name="[2e]"></a>Timer_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, handler.o(i.Timer_Handler))
<BR><BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_Handler
</UL>

<P><STRONG><a name="[29]"></a>UARTOVRHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, handler.o(i.UARTOVRHandler))
<BR><BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTOVR_Handler
</UL>

<P><STRONG><a name="[27]"></a>UARTRXHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, handler.o(i.UARTRXHandler))
<BR><BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTRX_Handler
</UL>

<P><STRONG><a name="[28]"></a>UARTTXHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, handler.o(i.UARTTXHandler))
<BR><BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTTX_Handler
</UL>

<P><STRONG><a name="[22]"></a>UsageFaultHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, handler.o(i.UsageFaultHandler))
<BR><BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>

<P><STRONG><a name="[55]"></a>__0printf$5</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, printf5.o(i.__0printf$5), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[c1]"></a>__1printf$5</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf5.o(i.__0printf$5), UNUSED)

<P><STRONG><a name="[41]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf5.o(i.__0printf$5))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_plane_Handler
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY0
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c2]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[c3]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[c4]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[57]"></a>apu_Button</STRONG> (Thumb, 30 bytes, Stack size 4 bytes, apu.o(i.apu_Button))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = apu_Button
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_pulse0_11
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_pulse0_10
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_pulse0_01
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_pulse0_00
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5c]"></a>apu_Intr_Trigger</STRONG> (Thumb, 30 bytes, Stack size 4 bytes, apu.o(i.apu_Intr_Trigger))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = apu_Intr_Trigger
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_pulse0_11
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_pulse0_10
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_pulse0_01
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_pulse0_00
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5d]"></a>b_green_createOnePlane</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, enemyplane.o(i.b_green_createOnePlane))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = b_green_createOnePlane
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rand
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;b_green_createPlane_511
</UL>

<P><STRONG><a name="[5f]"></a>b_green_createPlane_511</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, makeenemyplanearray.o(i.b_green_createPlane_511))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = b_green_createPlane_511 &rArr; b_green_createOnePlane
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;b_green_createOnePlane
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_plane_Handler
</UL>

<P><STRONG><a name="[60]"></a>b_green_drawPlane</STRONG> (Thumb, 424 bytes, Stack size 40 bytes, enemyplane.o(i.b_green_drawPlane))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = b_green_drawPlane &rArr; writeOneSprite
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeOneSprite
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[62]"></a>b_green_movePlane</STRONG> (Thumb, 488 bytes, Stack size 40 bytes, enemyplane.o(i.b_green_movePlane))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = b_green_movePlane &rArr; s_grey_createOneEnmeyBullet &rArr; __aeabi_fsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;s_grey_createOneEnmeyBullet
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rand
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[98]"></a>b_green_planeInit</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, enemyplane.o(i.b_green_planeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = b_green_planeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[64]"></a>clearNameTableAll</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, spriteram.o(i.clearNameTableAll))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = clearNameTableAll
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeOneNametable
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[30]"></a>create_plane_Handler</STRONG> (Thumb, 212 bytes, Stack size 8 bytes, handler.o(i.create_plane_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = create_plane_Handler &rArr; s_green_createPlane_243 &rArr; s_green_createPlane_222 &rArr; s_green_createOnePlane
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;s_grey_createPlane_166
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;s_grey_createPlane_145
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;s_grey_createPlane_144
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;s_grey_createPlane_123
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;s_grey_createPlane_122
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;s_grey_createPlane_111
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;s_green_createPlane_422
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;s_green_createPlane_411
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;s_green_createPlane_243
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;s_green_createPlane_222
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;s_green_createPlane_221
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;b_green_createPlane_511
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CREATE_PLANE_Handler
</UL>

<P><STRONG><a name="[71]"></a>delay</STRONG> (Thumb, 32 bytes, Stack size 4 bytes, systick.o(i.delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = delay
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_SysTick_CTRL
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_SysTick_VALUE
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_SysTick_LOAD
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
</UL>

<P><STRONG><a name="[74]"></a>delay_ms</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, systick.o(i.delay_ms))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = delay_ms &rArr; delay
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[45]"></a>delay_us</STRONG> (Thumb, 20 bytes, Stack size 4 bytes, systick.o(i.delay_us))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = delay_us &rArr; delay
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PS2_ReadData
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PS2_Cmd
</UL>

<P><STRONG><a name="[75]"></a>endInterFaceDraw</STRONG> (Thumb, 262 bytes, Stack size 40 bytes, gameinterface.o(i.endInterFaceDraw))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = endInterFaceDraw &rArr; writeOneSprite
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeOneSprite
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[78]"></a>enemyAndBulletMapCreate</STRONG> (Thumb, 354 bytes, Stack size 36 bytes, gamehitcheck.o(i.enemyAndBulletMapCreate))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = enemyAndBulletMapCreate
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tileMap
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7a]"></a>enmeyBulletDraw</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, enemybullet.o(i.enmeyBulletDraw))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = enmeyBulletDraw &rArr; writeOneSprite
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeOneSprite
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[99]"></a>enmey_BulletInit</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, enemybullet.o(i.enmey_BulletInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = enmey_BulletInit
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1b]"></a>fputc</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, retarget.o(i.fputc))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = fputc
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_SendChar
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printf5.o(i.__0printf$5)
</UL>
<P><STRONG><a name="[7c]"></a>gameCursorDraw</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, gameinterface.o(i.gameCursorDraw))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = gameCursorDraw &rArr; writeOneSprite
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeOneSprite
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7d]"></a>gameScoreDraw</STRONG> (Thumb, 240 bytes, Stack size 56 bytes, gameinterface.o(i.gameScoreDraw))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = gameScoreDraw &rArr; writeOneSprite
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeOneSprite
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7e]"></a>gameStartInterfaceShow</STRONG> (Thumb, 320 bytes, Stack size 40 bytes, gameinterface.o(i.gameStartInterfaceShow))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = gameStartInterfaceShow
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeOneNametable
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7f]"></a>isHit_b_EnemyPlane</STRONG> (Thumb, 186 bytes, Stack size 32 bytes, gamehitcheck.o(i.isHit_b_EnemyPlane))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = isHit_b_EnemyPlane &rArr; new_createOneBoom
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;new_createOneBoom
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[81]"></a>isHit_m_straight_EnemyPlane</STRONG> (Thumb, 132 bytes, Stack size 32 bytes, gamehitcheck.o(i.isHit_m_straight_EnemyPlane))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = isHit_m_straight_EnemyPlane &rArr; new_createOneBoom
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;new_createOneBoom
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a8]"></a>isHit_myBullets</STRONG> (Thumb, 82 bytes, Stack size 20 bytes, gamehitcheck.o(i.isHit_myBullets))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = isHit_myBullets
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[82]"></a>isHit_s_EnemyPlane</STRONG> (Thumb, 290 bytes, Stack size 56 bytes, gamehitcheck.o(i.isHit_s_EnemyPlane))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = isHit_s_EnemyPlane &rArr; new_createOneBoom
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;new_createOneBoom
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_noise_11
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_noise_10
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_noise_01
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_noise_00
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[87]"></a>isMyPlaneHit</STRONG> (Thumb, 128 bytes, Stack size 32 bytes, gamehitcheck.o(i.isMyPlaneHit))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = isMyPlaneHit &rArr; new_createOneBoom
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;new_createOneBoom
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[88]"></a>loadMapJianchuan</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, makemap.o(i.loadMapJianchuan))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = loadMapJianchuan
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeOneNametable
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[89]"></a>m_straight_createOnePlane</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, enemyplane.o(i.m_straight_createOnePlane))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = m_straight_createOnePlane
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rand
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;s_green_createPlane_422
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;s_green_createPlane_411
</UL>

<P><STRONG><a name="[8a]"></a>m_straight_drawPlane</STRONG> (Thumb, 398 bytes, Stack size 32 bytes, enemyplane.o(i.m_straight_drawPlane))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = m_straight_drawPlane &rArr; writeOneSprite
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeOneSprite
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a4]"></a>m_straight_movePlane</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, enemyplane.o(i.m_straight_movePlane))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = m_straight_movePlane
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[97]"></a>m_straight_planeInit</STRONG> (Thumb, 48 bytes, Stack size 12 bytes, enemyplane.o(i.m_straight_planeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = m_straight_planeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[18]"></a>main</STRONG> (Thumb, 2964 bytes, Stack size 24 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = main &rArr; s_grey_movePlane &rArr; s_grey_createOneEnmeyBullet &rArr; __aeabi_fsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_ov5640_config
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeOneSprite
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeOneNametable
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateEnemyBulletData
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_state
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_frame
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;s_grey_planeInit
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;s_grey_movePlane
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;s_grey_drawPlane
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;s_green_planeInit
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;s_green_movePlane
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;s_green_drawPlane
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_cnn_result
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_JY61P_flag
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;new_updateBoomData
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;new_boomInit
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;new_boomDraw
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;newGuanqiaInterFaceDraw
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;myPlane_updateBulletData
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;myPlane_createOneBullet
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;myPlane_bulletInit
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;myPlane_bulletDraw
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;myPlane_Init
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;myPlane_Draw
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;myPlane_Act
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;myBulletsMapCreate
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;makeMapSecond
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;makeMapFirst
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_straight_planeInit
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_straight_movePlane
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_straight_drawPlane
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loadMapJianchuan
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isMyPlaneHit
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isHit_s_EnemyPlane
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isHit_myBullets
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isHit_m_straight_EnemyPlane
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isHit_b_EnemyPlane
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gameStartInterfaceShow
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gameScoreDraw
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gameCursorDraw
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enmey_BulletInit
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enmeyBulletDraw
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enemyAndBulletMapCreate
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;endInterFaceDraw
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clearNameTableAll
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;b_green_planeInit
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;b_green_movePlane
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;b_green_drawPlane
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apu_Intr_Trigger
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apu_Button
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Init
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Write_Page
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Read
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Erase_Block
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PS2_Init
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PS2_DataKey
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[91]"></a>makeMapFirst</STRONG> (Thumb, 456 bytes, Stack size 40 bytes, makemap.o(i.makeMapFirst))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = makeMapFirst &rArr; SPI_Flash_Write_Page &rArr; SPI_Flash_Wait_Busy &rArr; SPI_Flash_ReadSR &rArr; SPI_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Write_Page
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[92]"></a>makeMapSecond</STRONG> (Thumb, 456 bytes, Stack size 40 bytes, makemap.o(i.makeMapSecond))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = makeMapSecond &rArr; SPI_Flash_Write_Page &rArr; SPI_Flash_Wait_Busy &rArr; SPI_Flash_ReadSR &rArr; SPI_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Write_Page
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a7]"></a>myBulletsMapCreate</STRONG> (Thumb, 68 bytes, Stack size 20 bytes, gamehitcheck.o(i.myBulletsMapCreate))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = myBulletsMapCreate
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tileMap
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a0]"></a>myPlane_Act</STRONG> (Thumb, 98 bytes, Stack size 0 bytes, myplane.o(i.myPlane_Act))
<BR><BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_toggle
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[9c]"></a>myPlane_Draw</STRONG> (Thumb, 962 bytes, Stack size 32 bytes, myplane.o(i.myPlane_Draw))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = myPlane_Draw &rArr; writeOneSprite
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeOneSprite
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[93]"></a>myPlane_Init</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, myplane.o(i.myPlane_Init))
<BR><BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a9]"></a>myPlane_bulletDraw</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, myplane.o(i.myPlane_bulletDraw))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = myPlane_bulletDraw &rArr; writeOneSprite
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeOneSprite
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[94]"></a>myPlane_bulletInit</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, myplane.o(i.myPlane_bulletInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = myPlane_bulletInit
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[9f]"></a>myPlane_createOneBullet</STRONG> (Thumb, 270 bytes, Stack size 20 bytes, myplane.o(i.myPlane_createOneBullet))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = myPlane_createOneBullet
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a1]"></a>myPlane_updateBulletData</STRONG> (Thumb, 48 bytes, Stack size 12 bytes, myplane.o(i.myPlane_updateBulletData))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = myPlane_updateBulletData
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[9b]"></a>newGuanqiaInterFaceDraw</STRONG> (Thumb, 170 bytes, Stack size 32 bytes, gameinterface.o(i.newGuanqiaInterFaceDraw))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = newGuanqiaInterFaceDraw &rArr; writeOneSprite
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeOneSprite
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[aa]"></a>new_boomDraw</STRONG> (Thumb, 186 bytes, Stack size 40 bytes, boom.o(i.new_boomDraw))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = new_boomDraw &rArr; writeOneSprite
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeOneSprite
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[9a]"></a>new_boomInit</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, boom.o(i.new_boomInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = new_boomInit
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[80]"></a>new_createOneBoom</STRONG> (Thumb, 48 bytes, Stack size 12 bytes, boom.o(i.new_createOneBoom))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = new_createOneBoom
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isMyPlaneHit
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isHit_s_EnemyPlane
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isHit_m_straight_EnemyPlane
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isHit_b_EnemyPlane
</UL>

<P><STRONG><a name="[a6]"></a>new_updateBoomData</STRONG> (Thumb, 58 bytes, Stack size 12 bytes, boom.o(i.new_updateBoomData))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = new_updateBoomData
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[34]"></a>noise_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, handler.o(i.noise_Handler))
<BR><BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NOISE_Handler
</UL>

<P><STRONG><a name="[31]"></a>pulse0_Handler</STRONG> (Thumb, 330 bytes, Stack size 16 bytes, handler.o(i.pulse0_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = pulse0_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_pulse1_11
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_pulse1_10
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_pulse1_01
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_pulse1_00
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_pulse0_11
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_pulse0_10
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_pulse0_01
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_pulse0_00
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PULSE0_Handler
</UL>

<P><STRONG><a name="[32]"></a>pulse1_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, handler.o(i.pulse1_Handler))
<BR><BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PULSE1_Handler
</UL>

<P><STRONG><a name="[46]"></a>readPs2DI</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, pstwo.o(i.readPs2DI))
<BR><BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PS2_ReadData
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PS2_Cmd
</UL>

<P><STRONG><a name="[9d]"></a>read_JY61P_flag</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, jy61p.o(i.read_JY61P_flag))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = read_JY61P_flag
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[9e]"></a>read_cnn_result</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, cnn.o(i.read_cnn_result))
<BR><BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b2]"></a>s_green_createOnePlane</STRONG> (Thumb, 336 bytes, Stack size 24 bytes, enemyplane.o(i.s_green_createOnePlane))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = s_green_createOnePlane
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rand
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;s_green_createPlane_243
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;s_green_createPlane_222
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;s_green_createPlane_221
</UL>

<P><STRONG><a name="[6c]"></a>s_green_createPlane_221</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, makeenemyplanearray.o(i.s_green_createPlane_221))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = s_green_createPlane_221 &rArr; s_green_createOnePlane
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;s_green_createOnePlane
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rand
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_plane_Handler
</UL>

<P><STRONG><a name="[6d]"></a>s_green_createPlane_222</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, makeenemyplanearray.o(i.s_green_createPlane_222))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = s_green_createPlane_222 &rArr; s_green_createOnePlane
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;s_green_createOnePlane
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rand
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;s_green_createPlane_243
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_plane_Handler
</UL>

<P><STRONG><a name="[6e]"></a>s_green_createPlane_243</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, makeenemyplanearray.o(i.s_green_createPlane_243))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = s_green_createPlane_243 &rArr; s_green_createPlane_222 &rArr; s_green_createOnePlane
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;s_green_createPlane_222
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;s_green_createOnePlane
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rand
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_plane_Handler
</UL>

<P><STRONG><a name="[6f]"></a>s_green_createPlane_411</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, makeenemyplanearray.o(i.s_green_createPlane_411))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = s_green_createPlane_411 &rArr; m_straight_createOnePlane
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_straight_createOnePlane
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rand
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_plane_Handler
</UL>

<P><STRONG><a name="[70]"></a>s_green_createPlane_422</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, makeenemyplanearray.o(i.s_green_createPlane_422))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = s_green_createPlane_422 &rArr; m_straight_createOnePlane
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_straight_createOnePlane
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rand
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_plane_Handler
</UL>

<P><STRONG><a name="[ac]"></a>s_green_drawPlane</STRONG> (Thumb, 546 bytes, Stack size 40 bytes, enemyplane.o(i.s_green_drawPlane))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = s_green_drawPlane &rArr; writeOneSprite
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeOneSprite
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a3]"></a>s_green_movePlane</STRONG> (Thumb, 730 bytes, Stack size 40 bytes, enemyplane.o(i.s_green_movePlane))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = s_green_movePlane
</UL>
<BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_toggle
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rand
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[96]"></a>s_green_planeInit</STRONG> (Thumb, 38 bytes, Stack size 12 bytes, enemyplane.o(i.s_green_planeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = s_green_planeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[63]"></a>s_grey_createOneEnmeyBullet</STRONG> (Thumb, 206 bytes, Stack size 32 bytes, enemybullet.o(i.s_grey_createOneEnmeyBullet))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = s_grey_createOneEnmeyBullet &rArr; __aeabi_fsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;s_grey_movePlane
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;b_green_movePlane
</UL>

<P><STRONG><a name="[b3]"></a>s_grey_createOnePlane</STRONG> (Thumb, 172 bytes, Stack size 24 bytes, enemyplane.o(i.s_grey_createOnePlane))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = s_grey_createOnePlane
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rand
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;s_grey_createPlane_145
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;s_grey_createPlane_144
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;s_grey_createPlane_123
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;s_grey_createPlane_122
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;s_grey_createPlane_111
</UL>

<P><STRONG><a name="[66]"></a>s_grey_createPlane_111</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, makeenemyplanearray.o(i.s_grey_createPlane_111))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = s_grey_createPlane_111 &rArr; s_grey_createOnePlane
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;s_grey_createOnePlane
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rand
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_plane_Handler
</UL>

<P><STRONG><a name="[67]"></a>s_grey_createPlane_122</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, makeenemyplanearray.o(i.s_grey_createPlane_122))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = s_grey_createPlane_122 &rArr; s_grey_createOnePlane
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;s_grey_createOnePlane
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rand
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;s_grey_createPlane_166
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_plane_Handler
</UL>

<P><STRONG><a name="[68]"></a>s_grey_createPlane_123</STRONG> (Thumb, 128 bytes, Stack size 16 bytes, makeenemyplanearray.o(i.s_grey_createPlane_123))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = s_grey_createPlane_123 &rArr; s_grey_createOnePlane
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;s_grey_createOnePlane
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rand
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_plane_Handler
</UL>

<P><STRONG><a name="[69]"></a>s_grey_createPlane_144</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, makeenemyplanearray.o(i.s_grey_createPlane_144))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = s_grey_createPlane_144 &rArr; s_grey_createOnePlane
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;s_grey_createOnePlane
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rand
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;s_grey_createPlane_166
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_plane_Handler
</UL>

<P><STRONG><a name="[6a]"></a>s_grey_createPlane_145</STRONG> (Thumb, 164 bytes, Stack size 16 bytes, makeenemyplanearray.o(i.s_grey_createPlane_145))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = s_grey_createPlane_145 &rArr; s_grey_createOnePlane
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;s_grey_createOnePlane
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rand
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_plane_Handler
</UL>

<P><STRONG><a name="[6b]"></a>s_grey_createPlane_166</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, makeenemyplanearray.o(i.s_grey_createPlane_166))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = s_grey_createPlane_166 &rArr; s_grey_createPlane_144 &rArr; s_grey_createOnePlane
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;s_grey_createPlane_144
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;s_grey_createPlane_122
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_plane_Handler
</UL>

<P><STRONG><a name="[ab]"></a>s_grey_drawPlane</STRONG> (Thumb, 658 bytes, Stack size 40 bytes, enemyplane.o(i.s_grey_drawPlane))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = s_grey_drawPlane &rArr; writeOneSprite
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeOneSprite
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a2]"></a>s_grey_movePlane</STRONG> (Thumb, 574 bytes, Stack size 48 bytes, enemyplane.o(i.s_grey_movePlane))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = s_grey_movePlane &rArr; s_grey_createOneEnmeyBullet &rArr; __aeabi_fsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;s_grey_createOneEnmeyBullet
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rand
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[95]"></a>s_grey_planeInit</STRONG> (Thumb, 40 bytes, Stack size 12 bytes, enemyplane.o(i.s_grey_planeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = s_grey_planeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8f]"></a>set_frame</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, apu.o(i.set_frame))
<BR><BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[83]"></a>set_noise_00</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, apu.o(i.set_noise_00))
<BR><BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isHit_s_EnemyPlane
</UL>

<P><STRONG><a name="[84]"></a>set_noise_01</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, apu.o(i.set_noise_01))
<BR><BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isHit_s_EnemyPlane
</UL>

<P><STRONG><a name="[85]"></a>set_noise_10</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, apu.o(i.set_noise_10))
<BR><BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isHit_s_EnemyPlane
</UL>

<P><STRONG><a name="[86]"></a>set_noise_11</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, apu.o(i.set_noise_11))
<BR><BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isHit_s_EnemyPlane
</UL>

<P><STRONG><a name="[58]"></a>set_pulse0_00</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, apu.o(i.set_pulse0_00))
<BR><BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pulse0_Handler
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apu_Intr_Trigger
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apu_Button
</UL>

<P><STRONG><a name="[59]"></a>set_pulse0_01</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, apu.o(i.set_pulse0_01))
<BR><BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pulse0_Handler
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apu_Intr_Trigger
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apu_Button
</UL>

<P><STRONG><a name="[5a]"></a>set_pulse0_10</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, apu.o(i.set_pulse0_10))
<BR><BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pulse0_Handler
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apu_Intr_Trigger
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apu_Button
</UL>

<P><STRONG><a name="[5b]"></a>set_pulse0_11</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, apu.o(i.set_pulse0_11))
<BR><BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pulse0_Handler
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apu_Intr_Trigger
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apu_Button
</UL>

<P><STRONG><a name="[ae]"></a>set_pulse1_00</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, apu.o(i.set_pulse1_00))
<BR><BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pulse0_Handler
</UL>

<P><STRONG><a name="[af]"></a>set_pulse1_01</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, apu.o(i.set_pulse1_01))
<BR><BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pulse0_Handler
</UL>

<P><STRONG><a name="[b0]"></a>set_pulse1_10</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, apu.o(i.set_pulse1_10))
<BR><BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pulse0_Handler
</UL>

<P><STRONG><a name="[b1]"></a>set_pulse1_11</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, apu.o(i.set_pulse1_11))
<BR><BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pulse0_Handler
</UL>

<P><STRONG><a name="[90]"></a>set_state</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, apu.o(i.set_state))
<BR><BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[79]"></a>tileMap</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gamehitcheck.o(i.tileMap))
<BR><BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;myBulletsMapCreate
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enemyAndBulletMapCreate
</UL>

<P><STRONG><a name="[33]"></a>triangle_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, handler.o(i.triangle_Handler))
<BR><BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRIANGLE_Handler
</UL>

<P><STRONG><a name="[7b]"></a>uart_SendChar</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, uart.o(i.uart_SendChar))
<BR><BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_SendChar
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_SendChar
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>

<P><STRONG><a name="[8b]"></a>uart_init</STRONG> (Thumb, 74 bytes, Stack size 20 bytes, uart.o(i.uart_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = uart_init
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a5]"></a>updateEnemyBulletData</STRONG> (Thumb, 108 bytes, Stack size 20 bytes, enemybullet.o(i.updateEnemyBulletData))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = updateEnemyBulletData
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2f]"></a>vga_Handler</STRONG> (Thumb, 100 bytes, Stack size 0 bytes, handler.o(i.vga_Handler))
<BR><BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VGA_Handler
</UL>

<P><STRONG><a name="[65]"></a>writeOneNametable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, spriteram.o(i.writeOneNametable))
<BR><BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loadMapJianchuan
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gameStartInterfaceShow
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clearNameTableAll
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[61]"></a>writeOneSprite</STRONG> (Thumb, 20 bytes, Stack size 12 bytes, spriteram.o(i.writeOneSprite))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = writeOneSprite
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;s_grey_drawPlane
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;s_green_drawPlane
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;new_boomDraw
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;newGuanqiaInterFaceDraw
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;myPlane_bulletDraw
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;myPlane_Draw
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_straight_drawPlane
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gameScoreDraw
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gameCursorDraw
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enmeyBulletDraw
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;endInterFaceDraw
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;b_green_drawPlane
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8c]"></a>write_ov5640_config</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, cnn.o(i.write_ov5640_config))
<BR><BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[54]"></a>NVIC_EnableIRQ</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, system.o(i.NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[56]"></a>_printf_core</STRONG> (Thumb, 658 bytes, Stack size 104 bytes, printf5.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf$5
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
